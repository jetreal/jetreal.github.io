{"version":3,"sources":["components/Road/OneRoad/road.module.css","components/Header/header.module.css","components/Results/results.module.css","Redux/Constants/Constants.js","Redux/reducers/roadReduser.js","Redux/reducers/allRedusers.js","Redux/sagas/sagas.js","Redux/store/configureStore.js","components/Buttons/Button.jsx","components/Header/Header.jsx","Redux/actions/roadAction.js","components/Header/ContainerHeader.js","components/Road/OneRoad/Road.jsx","components/Results/Results.jsx","components/Road/Roads.jsx","components/Road/ContainerRoad.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","road","lines","car","carName","finishLine","App-header","results","START_RACE","END_RACE","SET_STATE","CHANGE_POSITION","initState","items","image","config","image_path","image_ext","buttonNames","start","again","started","rootReducer","combineReducers","state","arguments","length","undefined","action","type","newState","Object","objectSpread","data","toConsumableArray","coord","isFinished","map","i","index","helloSaga","watchIncrementAsync","rootSaga","regenerator_default","a","wrap","_context","prev","next","put","stop","_marked","_context2","takeEvery","_marked2","_context3","all","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","subscribe","run","Button","props","react_default","createElement","className","styles","onClick","handleClick","buttonName","Header","_this","idInt","setInterval","onChangePosition","clearInterval","onAgainClick","this","React","Component","startRaceAC","isMove","endRaceAC","changePositionAC","connect","dispatch","onStartClick","Road","style","left","onChange","src","name","alt","Results","Roads","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this2","axios","then","response","setInitialState","_this3","r","Road_Road","key","renderRoads","_ref","setStateAC","App","es","ContainerHeader","ContainerRoad","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8dda211c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"road\":\"road_road__2NGgH\",\"lines\":\"road_lines__1xLvH\",\"car\":\"road_car__35mJW\",\"carName\":\"road_carName__1NIQK\",\"finishLine\":\"road_finishLine__1CZBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-header\":\"header_App-header__29yGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"results_results__RQbf_\"};","export const START_RACE = \"START_RACE\";\r\nexport const END_RACE = \"END_RACE\";\r\nexport const ON_LOAD = \"ON_LOAD\";\r\nexport const SET_STATE = \"SET_STATE\";\r\nexport const CHANGE_POSITION = \"CHANGE_POSITION\";","import { START_RACE, END_RACE, SET_STATE, CHANGE_POSITION } from \"../Constants/Constants\";\n// import _ from 'lodash';\n\nconst initState = {\n  items: [{ image: \"bus\" }, { image: \"bus\" }],\n  config: { image_path: '/rcrtng/tasks/cars', image_ext: 'png' },\n  buttonNames: { start: 'start', again: 'again' },\n  started: false\n\n}\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case START_RACE: {\n      let newState = { ...state, ...action.data };\n      // newState.started = {...state.started};\n  \n      newState.started = true;\n\n      return { ...newState };\n    }\n\n    case CHANGE_POSITION: {\n\n      let newState = { ...state, ...action.data };\n      newState.items = [...state.items];\n      newState.started = {...state.started};\n\n        if (newState.items[0].coord <= 1000) {\n            newState.items[0].coord += 10;\n\n            return {...newState}\n     \n        } else {\n          // newState.items[0].coord = 1000;\n          newState.items[0].isFinished = true;\n          newState.started = false;\n        }\n\n      return { ...newState };\n    }\n\n\n    case END_RACE: {\n\n      let newState = { ...state, ...action.data };\n      newState.items = [...state.items];\n      newState.items[0].coord = 0;\n      newState.items[0].isFinished = false;\n\n      return { ...newState, ...newState.items[0].coord };\n    }\n\n\n    case SET_STATE: {\n      let newState = { ...state, ...action.data };\n      newState.items.map((i, index) => {\n\n        i.coord = 0;\n        i.isFinished = false;\n        return false\n\n      })\n      return newState\n    }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport road from './roadReduser';\n\nconst rootReducer = combineReducers({\n  road\n});\n\nexport default rootReducer;","import {put, takeEvery, all } from 'redux-saga/effects'\r\nimport { CHANGE_POSITION, START_RACE } from '../Constants/Constants';\r\n\r\nfunction* helloSaga() {\r\n    // let state = yield select()\r\n    yield put({ type: CHANGE_POSITION })\r\n    \r\n    // setInterval(function() {\r\n        \r\n    // },5000)\r\n\r\n}\r\n\r\nexport function* watchIncrementAsync() {\r\n    yield takeEvery(START_RACE, helloSaga)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchIncrementAsync()\r\n    ])\r\n}\r\n\r\n// const state = store.getState();","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from '../reducers/allRedusers';\nimport rootSaga from '../sagas/sagas'\n\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(sagaMiddleware),\n);\n\n\nstore.subscribe(() => {\n  // console.log(store.getState())\n})\nexport default () => store\n\nsagaMiddleware.run(rootSaga)\n\n","import React from 'react';\r\nimport styles from './button.module.css';\r\n\r\nexport default (props) => {\r\n    \r\n\r\n    return (\r\n        <button className={styles['btn']}\r\n                onClick={props.handleClick}\r\n        >\r\n            {props.buttonName}\r\n        </button>\r\n    )\r\n} ","import React from 'react';\r\nimport styles from './header.module.css';\r\nimport Button from '../Buttons/Button';\r\n\r\nexport default class Header extends React.Component {\r\n\r\n\r\n  run = () => {\r\n    this.idInt = setInterval(() => {\r\n\r\n      this.props.onChangePosition()\r\n      if (this.props.road[0].coord > 1000) {\r\n\r\n        clearInterval(this.idInt)\r\n        this.props.onAgainClick()\r\n\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <header className={styles['App-header']}>\r\n        <Button handleClick={this.run}\r\n          buttonName={this.props.buttonNames.start} />\r\n        <Button handleClick={this.props.onAgainClick}\r\n          buttonName={this.props.buttonNames.again} />\r\n        <p>\r\n          Car Race\r\n          </p>\r\n      </header>\r\n    )\r\n  }\r\n}","import { START_RACE, END_RACE, SET_STATE, CHANGE_POSITION } from \"../Constants/Constants\";\n\nexport function startRaceAC(isMove) {\n  return {\n    type: START_RACE,\n    isMove\n  };\n}\nexport function endRaceAC(idInt) {\n  return {\n    type: END_RACE,\n    idInt\n  };\n}\nexport function setStateAC(data) {\n  return {\n    type: SET_STATE,\n    data\n  };\n}\n\nexport function changePositionAC() {\n  return {\n    type: CHANGE_POSITION\n  };\n}","import { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { startRaceAC, endRaceAC, changePositionAC } from \"../../Redux/actions/roadAction\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n      buttonNames: state.road.buttonNames,\r\n      road: state.road.items\r\n\r\n    }\r\n  }\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        onStartClick: () => {\r\n          dispatch(startRaceAC());\r\n        },\r\n\r\n        onAgainClick: (idInt) => {\r\n          dispatch(endRaceAC(idInt));\r\n        },\r\n        onChangePosition: () => {\r\n          dispatch(changePositionAC());\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps ) (Header);","import React from 'react';\r\nimport styles from './road.module.css';\r\n\r\n\r\nexport default class Road extends React.Component {\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className={styles['road']}>\r\n                <div className={styles['finishLine']}></div>\r\n                <div className={styles['car']}\r\n                    style={{ left: this.props.coord }}\r\n                    onChange={this.props.onChangePosition}\r\n                >\r\n                    <img src={'http://we.pena-app.ru' + this.props.image_path + '/' + this.props.name + '.' + this.props.image_ext} \r\n                    alt={''}/>\r\n                </div>\r\n                <div className={styles['lines']}>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className={styles['carName']}><p>{this.props.name}</p></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n        \r\n    }\r\n\r\n}","import React from 'react';\r\nimport styles from './results.module.css';\r\n\r\nexport default (props) => {\r\n    return (\r\n\r\n        <div className={styles['results']}>\r\n            \r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n// import styles from \"./roads.module.css\";\r\n\r\nimport * as axios from \"axios\";\r\nimport Road from \"./OneRoad/Road\";\r\nimport Results from \"../Results/Results\";\r\n\r\n\r\n\r\nexport default class Roads extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isMove: true};\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n       \r\n    \r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // console.log(this.props)\r\n        // let x = this.props.road.items[0].coord\r\n        // if ( x >= 1000) {\r\n        //     clearInterval( this.idInt )\r\n        //     this.props.onAgainClick(this.state)\r\n        // }\r\n    \r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval( this.idInt )\r\n    }\r\n\r\n    componentWillMount() {\r\n        axios.get('http://we.pena-app.ru/rcrtng/api/cars/')\r\n            .then(response => {\r\n                this.props.setInitialState(response.data)\r\n            });\r\n    }\r\n\r\n    renderRoads() {\r\n        return this.props.road.items.map( ( r, index) => \r\n            <Road key={index} \r\n                  name={r.image}\r\n                  image_path={this.props.road.config.image_path}\r\n                  image_ext={this.props.road.config.image_ext}\r\n                  coord={r.coord}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRoads()}\r\n                <Results />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import Roads from \"./Roads\";\r\nimport { setStateAC, changePositionAC, startRaceAC, endRaceAC } from \"../../Redux/actions/roadAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setInitialState: (data) => {\r\n            dispatch(setStateAC(data));\r\n        },\r\n\r\n        onChangePosition: () => {\r\n            dispatch(changePositionAC());\r\n        },\r\n\r\n        onStartClick: (isMove) => {\r\n            dispatch(startRaceAC(isMove));\r\n        },\r\n\r\n        onAgainClick: (isMove) => {\r\n            dispatch(endRaceAC(isMove));\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(({ road }) => ({ road }), mapDispatchToProps)(Roads);","import React from 'react';\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Redux/store/configureStore\";\nimport ContainerHeader from './components/Header/ContainerHeader';\nimport ContainerRoads from './components/Road/ContainerRoad';\n\n\nconst store = configureStore();\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n\n        <ContainerHeader />\n\n        <ContainerRoads />\n\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}