{"version":3,"sources":["components/NotesList/styles.module.css","components/NotesList/buttons/addBtn.module.css","components/NotesList/renderNote/renderNote.module.css","components/NotesList/buttons/closeBtn.module.css","components/NotesList/buttons/editBtn.module.css","components/NotesList/header/header.module.css","redux/actions/notes.js","redux/store/localStorage.js","redux/reducers/notes.js","redux/actions/Artworks.js","redux/reducers/artworks.js","redux/reducers/index.js","redux/sagas/sagas.js","redux/store/configureStore.js","components/NotesList/buttons/AddBtn.jsx","components/NotesList/buttons/CloseBtn.jsx","components/NotesList/buttons/EditBtn.jsx","components/NotesList/renderNote/RenderNote.jsx","components/NotesList/header/Header.jsx","components/NotesList/index.js","components/NotesList/ContainerNotesList.js","components/Pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","note-list","add-note","note-list-item","closeBtn","editBtn","headerDiv","ADD_NOTE","REMOVE_ITEM","CHANGE_TEXT","initState","serializedState","localStorage","getItem","JSON","parse","err","loadState","DISPLAY_ITEM_IMG","works","_id","title","imgUrl","numberOfClikedElements","show","rootReducer","combineReducers","notes","state","arguments","length","undefined","action","type","text","concat","Object","toConsumableArray","slice","Number","afterIndex","stateCopy","filter","item","index","valueText","artworks","copyState","objectSpread","helloSaga","watchIncrementAsync","rootSaga","stringStateNotes","regenerator_default","a","wrap","_context","prev","next","select","sent","stringify","window","onbeforeunload","setItem","clear","stop","_marked","_context2","takeEvery","_marked2","_context3","all","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","subscribe","saveState","getState","run","AddBtn","props","react_default","createElement","Fragment","data-index","className","styles","onClick","onAddButtonClick","CloseBtn","onRemoveItem","EditBtn","onChangeText","RenderNote","buttons_CloseBtn","note","buttons_EditBtn","Header","NotesList","_this","this","console","log","header_Header","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","map","key","renderNote_RenderNote","bind","buttons_AddBtn","React","Component","connect","_ref","dispatch","e","prompt","addNote","target","dataset","currentTarget","cangedText","Home","ContainerNotesList","App","es","react_router_dom","react_router","exact","path","component","HomePage","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce961ba8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note-list\":\"styles_note-list__1icKL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add-note\":\"addBtn_add-note__3EO_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note-list-item\":\"renderNote_note-list-item__3_27D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeBtn\":\"closeBtn_closeBtn__1Gqpg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBtn\":\"editBtn_editBtn__2ctDK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerDiv\":\"header_headerDiv___YqXY\"};","export const ADD_NOTE = \"ADD_NOTE\";\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const CHANGE_TEXT = 'CHANGE_TEXT';\n\nexport function addNote(text, afterIndex) {\n  return {\n    type: ADD_NOTE,\n    text,\n    afterIndex\n  };\n}\n\nexport function removeItemAC(index) {\n  return {\n    type: REMOVE_ITEM,\n    index\n  };\n}\n\nexport function changeTextAC(valueText, index) {\n  return {\n    type: CHANGE_TEXT,\n    valueText,\n    index\n  };\n}","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('notes');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state.notes);\r\n        localStorage.setItem('notes', serializedState);\r\n    } catch (err) {\r\n        // ignore write errors\r\n    }\r\n}","import { ADD_NOTE, REMOVE_ITEM, CHANGE_TEXT } from \"../actions/notes\";\nimport { loadState } from \"../store/localStorage\";\n\nconst persistedState = loadState()\n\nconst initState = persistedState || ['milk', 'oranges', 'chocolate', 'ice cream']  \n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case ADD_NOTE:\n      if (action.text === null || action.text === '') { return state }\n      return [\n        ...state.slice(0, Number(action.afterIndex) + 1),\n        action.text,\n        ...state.slice(Number(action.afterIndex) + 1)\n      ];\n    case REMOVE_ITEM: {\n      let stateCopy = [...state]\n      if (stateCopy.length > 1) {\n        stateCopy = stateCopy.filter((item, index) => index !== Number(action.index))\n      }\n      return stateCopy\n    }\n    case CHANGE_TEXT:\n      if (action.valueText === null || action.valueText === '') { return state }\n      let stateCopy = [...state]\n      stateCopy[action.index] = action.valueText\n      return stateCopy\n    default:\n      return state;\n  }\n}","export const DISPLAY_ITEM_IMG = \"DISPLAY_ITEM_IMG\"\r\n\r\nexport function displayItemAC(index) {\r\n  return {\r\n    type: DISPLAY_ITEM_IMG,\r\n    index\r\n  };\r\n}\r\n","import { DISPLAY_ITEM_IMG } from \"../actions/Artworks\";\r\n\r\nconst initState = {\r\n    works: [\r\n        { _id: \"1\", title: \"In the event of sinking\", imgUrl: 'url(/imgs/artworks/1.jpg)' },\r\n        { _id: \"2\", title: \"Refugees in a nutshell\", imgUrl: 'url(/imgs/artworks/2.jpg)' },\r\n        { _id: \"3\", title: \"Solidarity\", imgUrl: 'url(/imgs/artworks/3.jpg)' },\r\n        { _id: \"4\", title: \"The rehearsal\", imgUrl: 'url(/imgs/artworks/4.jpg)' }\r\n    ],\r\n    numberOfClikedElements: 0,\r\n    show: false\r\n}\r\nexport default function (state = initState, action) {\r\n    switch (action.type) {\r\n        case DISPLAY_ITEM_IMG:\r\n            let copyState = {...state}\r\n            copyState.numberOfClikedElements = [action.index]\r\n            copyState.show = {...state.show}\r\n            if (copyState.show === false) {copyState.show = true}\r\n            return {\r\n                ...copyState\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\nimport notes from './notes';\nimport artworks from './artworks';\n\nconst rootReducer = combineReducers({\n  notes,\n  artworks\n});\n\nexport default rootReducer;","import { takeEvery, all, select } from 'redux-saga/effects'\r\n\r\nfunction* helloSaga() {\r\n    let state = yield select()\r\n    let stringStateNotes = JSON.stringify(state.notes);\r\n    window.onbeforeunload = function () {\r\n        localStorage.setItem(\"notes\", stringStateNotes);\r\n    }\r\n    localStorage.clear()\r\n}\r\n\r\nexport function* watchIncrementAsync() {\r\n    yield takeEvery('ADD_NOTE', helloSaga)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchIncrementAsync()\r\n    ])\r\n}\r\n\r\n// const state = store.getState();","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from '../reducers/';\nimport rootSaga from '../sagas/sagas'\nimport { saveState } from './localStorage'\n\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(sagaMiddleware),\n);\n\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nexport default () => store\n\nsagaMiddleware.run(rootSaga)\n\n","import React from \"react\";\r\nimport styles from \"./addBtn.module.css\";\r\n\r\n\r\nconst AddBtn = (props) => {\r\n    return (\r\n        <>\r\n            <button\r\n                data-index={props.index}\r\n                className={styles['add-note']}\r\n                onClick={props.onAddButtonClick}\r\n            >\r\n                + add note\r\n             </button>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default AddBtn","import React from \"react\";\r\nimport styles from './closeBtn.module.css'\r\n\r\n\r\nconst CloseBtn = (props) => {\r\n    if (props.length > 1) {\r\n        return (\r\n            <>\r\n                <button onClick={props.onRemoveItem}\r\n                    data-index={props.index}\r\n                    className={styles[\"closeBtn\"]}>\r\n                    X\r\n                </button>\r\n            </>\r\n        )\r\n    } else {\r\n        return false;\r\n    }\r\n    \r\n}\r\n\r\nexport default CloseBtn","import React from \"react\";\r\nimport styles from './editBtn.module.css'\r\n\r\nconst EditBtn = (props) => {\r\n        return (\r\n            <>\r\n                <button onClick={props.onChangeText}\r\n                    data-index={props.index}\r\n                    className={styles[\"editBtn\"]}\r\n                >\r\n                    edit\r\n                </button>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default EditBtn","import React from \"react\";\r\nimport styles from \"./renderNote.module.css\";\r\n\r\nimport CloseBtn from \"../buttons/CloseBtn\";\r\nimport EditBtn from \"../buttons/EditBtn\";\r\n\r\nconst RenderNote = (props) => {\r\n    return (\r\n        <>\r\n            <div className={styles[\"note-list-item\"]}>\r\n                <CloseBtn index={props.index}\r\n                          onRemoveItem={props.onRemoveItem}\r\n                          length={props.length} />\r\n\r\n                {props.note}\r\n\r\n                <EditBtn index={props.index}\r\n                         onChangeText={props.onChangeText}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RenderNote","import React from \"react\";\r\nimport styles from \"./header.module.css\";\r\n\r\n\r\nconst Header = (props) => {\r\n        return (\r\n            <div className={styles['headerDiv']}>\r\n                <p>\r\n                    shopping list\r\n                </p>\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Header","import React from \"react\";\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\n\nimport styles from \"./styles.module.css\";\n\nimport AddBtn from \"./buttons/AddBtn\";\nimport RenderNote from \"./renderNote/RenderNote\";\nimport Header from \"./header/Header\";\n\nclass NotesList extends React.Component {\n  render() {\n    console.log(this.props.notes)\n    debugger\n    return (\n      <div>\n        <Header />\n        <ul className={styles[\"note-list\"]}>\n          <ReactCSSTransitionGroup\n            transitionName=\"fade\"\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={500}\n          >\n            {this.props.notes.map((note, index) => {\n            \n              return (\n                <li key={index}>\n                  <RenderNote note={note}\n                              index={index}\n                              onRemoveItem={this.props.onRemoveItem}\n                              length={this.props.notes.length}\n                              onChangeText={this.props.onChangeText.bind(null, {notes: this.props.notes})}/> \n                  <AddBtn index={index}\n                          onAddButtonClick={this.props.onAddButtonClick}\n                  />\n                </li>\n              );\n            })}\n          </ReactCSSTransitionGroup>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default NotesList;","import { connect } from \"react-redux\";\r\nimport { addNote, removeItemAC, changeTextAC } from \"../../redux/actions/notes\";\r\nimport NotesList from \"./index\";\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddButtonClick: e => {\r\n            const text = window.prompt(\"Note text:\");\r\n            dispatch(addNote(text, e.target.dataset.index));\r\n        },\r\n        onRemoveItem: e => {\r\n            dispatch(removeItemAC(e.currentTarget.dataset.index));\r\n        },\r\n        onChangeText: ( notes, e ) => {\r\n            const cangedText = window.prompt(\"Cange note:\", notes.notes[e.currentTarget.dataset.index]);\r\n            dispatch(changeTextAC(cangedText, e.currentTarget.dataset.index))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(({ notes }) => ({ notes }), mapDispatchToProps ) (NotesList);\r\n    \r\n","import React from \"react\";\n\nimport ContainerNotesList from \"../../NotesList/ContainerNotesList\";\n\nexport default () => (\n  <div>\n    <ContainerNotesList /> \n  </div>\n);\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport configureStore from \"./redux/store/configureStore\";\nimport HomePage from \"./components/Pages/Home\";\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n          </Switch>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}