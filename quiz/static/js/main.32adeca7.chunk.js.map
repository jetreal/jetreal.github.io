{"version":3,"sources":["components/NotesList/buttons/displayResult.module.css","components/NotesList/styles.module.css","components/NotesList/renderNote/renderNote.module.css","components/NotesList/header/header.module.css","components/NotesList/buttons/AgainBtn.module.css","redux/actions/notes.js","components/NotesList/renderNote/RenderNote.jsx","components/NotesList/header/Header.jsx","components/NotesList/buttons/AgainBtn.jsx","components/NotesList/buttons/DisplayResult.jsx","components/NotesList/index.js","components/NotesList/ContainerNotesList.js","redux/reducers/notes.js","redux/reducers/index.js","App.js","redux/store/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","displayResult","divWhisNumber","note-list","note-list-item","headerDiv","add-note","CHECK_ITEM","AGAIN_BUTTON","RenderNote","props","react_default","a","createElement","Fragment","className","styles","data-index","index","onClick","onCheckItem","note","Header","notes","questions","currentPage","question","AgainBtn","onAgainClick","DisplayResult","style","backgroundImage","url","text","trueNumbers","NotesList","_this","this","header_Header","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","answer","map","key","renderNote_RenderNote","length","counterTrueAnswer","buttons_DisplayResult","resultMessage","buttons_AgainBtn","React","Component","connect","_ref","dispatch","e","currentTarget","dataset","type","initState","rootReducer","combineReducers","state","arguments","undefined","action","stateCopy","Object","objectSpread","rightAnswerNumber","rightAnswer","Number","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","ContainerNotesList","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.32adeca7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayResult\":\"displayResult_displayResult__1Kk6F\",\"divWhisNumber\":\"displayResult_divWhisNumber__2R3vq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note-list\":\"styles_note-list__35gZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note-list-item\":\"renderNote_note-list-item__3FToB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerDiv\":\"header_headerDiv__3BlKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add-note\":\"AgainBtn_add-note__3QZtW\"};","\nexport const CHECK_ITEM = 'CHECK_ITEM';\nexport const AGAIN_BUTTON = 'AGAIN_BUTTON';\n\n\nexport function checkItemAC(index) {\n  return {\n    type: CHECK_ITEM,\n    index\n  };\n}\n\nexport function againAC() {\n  return {\n    type: AGAIN_BUTTON\n  };\n}","import React from \"react\";\r\nimport styles from \"./renderNote.module.css\";\r\n\r\n\r\n\r\nconst RenderNote = (props) => {\r\n    return (\r\n        <>\r\n            <div className={styles[\"note-list-item\"]}\r\n                 data-index={props.index}\r\n                 onClick={props.onCheckItem}>\r\n                {props.note}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RenderNote","import React from \"react\";\r\nimport styles from \"./header.module.css\";\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n        return (\r\n            <div className={styles['headerDiv']}>\r\n                <p>\r\n                    {props.notes.questions[props.notes.currentPage].question}\r\n                </p>\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport styles from \"./AgainBtn.module.css\";\r\n\r\n\r\nconst AgainBtn = (props) => {\r\n    return (\r\n        <>\r\n            <button\r\n                data-index={props.index}\r\n                className={styles['add-note']}\r\n                onClick={props.onAgainClick}\r\n            >\r\n                Again ?\r\n             </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AgainBtn","import React from \"react\";\r\nimport styles from './displayResult.module.css'\r\n\r\nconst DisplayResult = (props) => {\r\n        return (\r\n\r\n                <div className={styles[\"displayResult\"]}\r\n                        style={{\r\n                                backgroundImage: props.url\r\n                        }}>\r\n                        <p>\r\n                                {props.text}\r\n                        </p>\r\n                        <div className={styles['divWhisNumber']}>\r\n                                {props.trueNumbers}\r\n                        </div>\r\n                </div>\r\n\r\n        )\r\n}\r\n\r\nexport default DisplayResult","import React from \"react\";\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\n\nimport styles from \"./styles.module.css\";\n\nimport RenderNote from \"./renderNote/RenderNote\";\nimport Header from \"./header/Header\";\nimport AgainBtn from \"./buttons/AgainBtn\";\nimport DisplayResult from \"./buttons/DisplayResult\";\n\nclass NotesList extends React.Component {\n\n  render() {\n    if (this.props.notes.currentPage < 10) {\n      return (\n        <div>\n          <Header notes={this.props.notes} />\n          <ul className={styles[\"note-list\"]}>\n            <ReactCSSTransitionGroup\n              transitionName=\"fade\"\n              transitionEnterTimeout={500}\n              transitionLeaveTimeout={500}\n            >\n              {this.props.notes.questions[this.props.notes.currentPage].answer.map((note, index) => {\n                return (\n                  <li key={index}>\n                    <RenderNote note={note}\n                      index={index}\n                      onCheckItem={this.props.onCheckItem}\n                      length={this.props.notes.questions[this.props.notes.currentPage].answer.length}\n                    />\n                  </li>\n                );\n              })}\n            </ReactCSSTransitionGroup>\n          </ul>\n\n        </div>\n      );\n    } else {\n      switch (true) {\n        case (this.props.notes.counterTrueAnswer > 8): {\n          return (\n            <>\n              <DisplayResult url={this.props.notes.resultMessage[0].url}\n                             text={this.props.notes.resultMessage[0].text} \n                             trueNumbers={this.props.notes.counterTrueAnswer}/>\n              <AgainBtn onAgainClick={this.props.onAgainClick} />\n            </>\n          )\n        }\n        case (this.props.notes.counterTrueAnswer > 5): {\n          return (\n            <>\n              <DisplayResult url={this.props.notes.resultMessage[1].url}\n                             text={this.props.notes.resultMessage[1].text} \n                             trueNumbers={this.props.notes.counterTrueAnswer}/>\n              <AgainBtn onAgainClick={this.props.onAgainClick} />\n            </>\n          )\n        }\n        default: {\n          return (\n            <>\n              <DisplayResult url={this.props.notes.resultMessage[2].url}\n                             text={this.props.notes.resultMessage[2].text} \n                             trueNumbers={this.props.notes.counterTrueAnswer}/>\n              <AgainBtn onAgainClick={this.props.onAgainClick} />\n            </>\n          )\n        }\n      }\n    }\n  }\n}\n\nexport default NotesList;","import { connect } from \"react-redux\";\r\nimport { checkItemAC, againAC } from \"../../redux/actions/notes\";\r\nimport NotesList from \"./index\";\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        onCheckItem: e => {\r\n            dispatch(checkItemAC(e.currentTarget.dataset.index));\r\n        },\r\n\r\n        onAgainClick: () => {\r\n            dispatch(againAC());\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(({ notes }) => ({ notes }), mapDispatchToProps ) (NotesList);\r\n    \r\n","import { CHECK_ITEM, AGAIN_BUTTON } from \"../actions/notes\";\n// import { loadState } from \"../store/localStorage\";\nimport stateData from '../store/stateData.json'\n\nconst initState = stateData\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case AGAIN_BUTTON: {\n      let stateCopy = { ...state }\n      stateCopy.currentPage = 0;\n      stateCopy.counterTrueAnswer = 0;\n      return stateCopy\n    }\n\n    case CHECK_ITEM: {\n      let stateCopy = { ...state }\n      let rightAnswerNumber = stateCopy.questions[stateCopy.currentPage].rightAnswer\n      if (stateCopy.currentPage !== 10) {\n        stateCopy.currentPage = stateCopy.currentPage + 1;\n      }\n      if (Number(action.index) === rightAnswerNumber) {\n        ++stateCopy.counterTrueAnswer;\n      }\n      return stateCopy\n    }\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport notes from './notes';\n\n\nconst rootReducer = combineReducers({\n  notes\n});\n\nexport default rootReducer;","import React from 'react';\nimport './App.css';\nimport ContainerNotesList from './components/NotesList/ContainerNotesList';\n\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/store/configureStore\";\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Test Quiz\n          </p>\n        </header>\n        <ContainerNotesList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore} from 'redux';\nimport rootReducer from '../reducers/';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default () => store\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}